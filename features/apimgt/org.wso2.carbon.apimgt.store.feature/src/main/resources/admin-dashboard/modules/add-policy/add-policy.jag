<%
var log = new Log();

var addPolicy = function (tierName, requestCount, unitTime,timeUnit, startingIP, endingIP, httpVerb, defaultRequestCount,defaultUnitTime,defaultTimeUnit) {
    try {
        var provider = jagg.getUser().username;
        var APIProviderImpl = Packages.org.wso2.carbon.apimgt.impl.APIProviderImpl;
        var apiProvider = new APIProviderImpl(provider);
        var policyParametersMap = constructPolicyParametersMap(tierName, requestCount, unitTime,timeUnit, startingIP, endingIP, httpVerb, defaultRequestCount,defaultUnitTime,defaultTimeUnit);
        var tierAddedMsg = "\nAdded Tier: "+ policyParametersMap.get("tierName") + "\nRequest Count: " + policyParametersMap.get("requestCount") + " \nUnit Time: " + policyParametersMap.get("unitTime") + " "+policyParametersMap.get("timeUnit")+"\nStarting IP: " + policyParametersMap.get("startingIP") + "\nEnding IP: " + policyParametersMap.get("endingIP") + "\nHTTP Verb: " + policyParametersMap.get("httpVerb")
                +"\nDefault Request Count: "+policyParametersMap.get("defaultRequestCount")+"\nDefault Unit Time: "+policyParametersMap.get("defaultUnitTime")+" "+policyParametersMap.get("defaultTimeUnit");

        log.info(tierAddedMsg);

        apiProvider.addPolicy(policyParametersMap);

        return {
            error: false
        };
    } catch (ex) {
        var errorMessage = "Error occurred while saving tier (Cause:" + ex.message + ")";
        log.error(errorMessage);
        return {
            error: true,
            message: errorMessage
        };
    }
};

var constructPolicyParametersMap  = function(tierName, requestCount, unitTime,timeUnit, startingIP, endingIP, httpVerb, defaultRequestCount,defaultUnitTime,defaultTimeUnit){
    var Map = Packages.java.util.HashMap;
    var policyParametersMap = new Map();
    policyParametersMap.put("tierName",tierName);
    policyParametersMap.put("requestCount",requestCount);
    policyParametersMap.put("unitTime",unitTime);
    policyParametersMap.put("timeUnit",timeUnit);
    policyParametersMap.put("startingIP",startingIP);
    policyParametersMap.put("endingIP",endingIP);
    policyParametersMap.put("httpVerb",httpVerb);
    policyParametersMap.put("defaultRequestCount",defaultRequestCount);
    policyParametersMap.put("defaultUnitTime",defaultUnitTime);
    policyParametersMap.put("defaultTimeUnit",defaultTimeUnit);

    return policyParametersMap;
}
%>

